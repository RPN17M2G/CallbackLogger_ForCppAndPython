cmake_minimum_required(VERSION 3.14)
project(LogInfrastructure LANGUAGES CXX)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

include_directories(include)

# Recursively collect all source and header files
file(GLOB_RECURSE SRC_FILES src/*.cpp)
file(GLOB_RECURSE HEADER_FILES include/*.h)
file(GLOB_RECURSE BINDINGS_FILES bindings/*.cpp)
file(GLOB_RECURSE EXAMPLES_FILES Examples/*.cpp)

add_subdirectory(thirdparty/pybind11)

add_library(CallbackLogger STATIC ${SRC_FILES} ${HEADER_FILES})
target_include_directories(CallbackLogger PUBLIC include)

# Collect all files needed for the Python module
set(PYBIND_SOURCES ${BINDINGS_FILES} ${SRC_FILES})

pybind11_add_module(pycallbacklogger ${PYBIND_SOURCES})
target_include_directories(pycallbacklogger PRIVATE include)

install(TARGETS pycallbacklogger
        LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
        ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
        RUNTIME DESTINATION ${CMAKE_INSTALL_LIBDIR}
)

foreach(EXAMPLE_FILE ${EXAMPLES_FILES})
    get_filename_component(EXAMPLE_NAME ${EXAMPLE_FILE} NAME_WE)
    add_executable(${EXAMPLE_NAME} ${EXAMPLE_FILE})
    target_link_libraries(${EXAMPLE_NAME} PRIVATE CallbackLogger)
    target_include_directories(${EXAMPLE_NAME} PRIVATE include)
endforeach()
